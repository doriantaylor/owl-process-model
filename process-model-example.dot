digraph {
    graph [bgcolor=transparent,overlap=false];
    node [shape=box,color="#000000",fontcolor="#000000",fontname="Lucida Grande, Lucida Sans Unicode, sans-serif",target="_parent"];
    edge [fontsize=10,concentrate=true,color="#000000",fontcolor="#000000",fontname="Lucida Grande, Lucida Sans Unicode, sans-serif"];

    subgraph {
        node [style=dashed];
        ev_Event      [label="ev:Event", href="http://motools.sourceforge.net/event/event.html#term_Event"];
        foaf_Agent    [label="foaf:Agent", href="http://xmlns.com/foaf/spec/#term_Agent"];
        foaf_Person   [label="foaf:Person", href="http://xmlns.com/foaf/spec/#term_Person"];
        ibis_Argument [label="ibis:Argument", href="https://vocab.methodandstructure.com/ibis#Argument"];
        ibis_Entity   [label="ibis:Entity", href="https://vocab.methodandstructure.com/ibis#Entity"];
        ibis_Issue    [label="ibis:Issue", href="https://vocab.methodandstructure.com/ibis#Issue"];
        ibis_Position [label="ibis:Position" href="https://vocab.methodandstructure.com/ibis#Position"];
        ibis_State    [label="ibis:State", href="https://vocab.methodandstructure.com/ibis#State"];
        // owl_Thing     [label="owl:Thing", style=dashed];
        prov_Activity [label="prov:Activity", href="https://www.w3.org/TR/prov-o/#Activity"];
        skos_Concept  [label="skos:Concept", href="https://www.w3.org/TR/skos-reference/#concepts"];
	// time_Instant [label="time:Instant", style=dashed];
    }

    subgraph {
        node [shape=note,style=dashed];
        xsd_decimal [label="xsd:decimal"];
        xsd_dateTime [label="xsd:dateTime"];
    }

    pm_Goal   [label="pm:Goal"];
    pm_Target [label="pm:Target"];
    pm_Action [label="pm:Action"];
    pm_Task   [label="pm:Task"];
    pm_Method [label="pm:Method"];

    subgraph {
        edge [label="rdfs:subClassOf", style=dashed];
        foaf_Person -> foaf_Agent;
        ibis_Argument -> ibis_Issue -> ibis_State -> ibis_Entity -> skos_Concept;
        pm_Action -> prov_Activity;
        pm_Method -> pm_Action;
        pm_Target -> pm_Goal -> ibis_Issue;
        pm_Task -> ibis_Position -> ibis_Entity;
        pm_Task -> pm_Action -> ev_Event;
    }

    subgraph {
        edge [style=dashed];
        pm_Task -> ibis_Argument [label="ibis:supported-by"];
        // ev_Event -> owl_Thing [label="ev:factor"];
        // ev_Event -> owl_Thing [label="ev:product"];
        // ev_Event -> foaf_Agent [label="ev:agent"];
    }

    ev_Event   -> ibis_State   [label="pm:outcome"];
    foaf_Agent -> pm_Goal      [label="pm:wants"];
    pm_Action  -> foaf_Agent   [label="pm:involves"];
    pm_Action  -> foaf_Person  [label="pm:performer"];
    pm_Action  -> ibis_State   [label="pm:context"];
    pm_Action  -> pm_Action    [label="pm:variant"];
    pm_Action  -> pm_Method    [label="pm:method"];
    pm_Target  -> pm_Goal      [label="pm:anchors", weight=1];
    pm_Target  -> pm_Task      [label="pm:initiates"];
    pm_Target  -> xsd_dateTime [label="pm:due", weight=1];
    pm_Target  -> xsd_decimal  [label="pm:budget", weight=1];
    pm_Task    -> foaf_Person  [label="pm:recipient"];
    pm_Task    -> foaf_Person  [label="pm:responsible"];
    pm_Task    -> pm_Goal      [label="pm:achieves"];
    pm_Task    -> pm_Task      [label="pm:subtask"];
}
